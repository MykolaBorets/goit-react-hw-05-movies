{"version":3,"file":"static/js/659.af4a9021.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/MovieDetails/movie-details.module.css?79a2","components/MovieDetails/MovieDetails.jsx","pages/SingleMoviePage/SingleMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\nconst URL_DETAILS = 'https://api.themoviedb.org/3/movie/';\n\nconst API_KEY = '2032b26aa9b0c559d2e14e504dcab073';\n\nconst baseParams = {\n  api_key: API_KEY,\n  language: 'en-US',\n  include_adult: false,\n};\n\nconst handleRequestError = error => {\n  console.error('Request failed:', error);\n  throw error;\n};\n\nexport const getTrendingMovies = () => {\n  const params = {\n    ...baseParams,\n    page: '1',\n    per_page: '20',\n  };\n  return axios.get(URL_TRENDING, { params }).catch(handleRequestError);\n};\n\nexport const getMovieById = id => {\n  const params = { ...baseParams };\n  return axios\n    .get(`${URL_DETAILS}/${id}`, { params })\n    .catch(handleRequestError);\n};\n\nexport const getMovieCastById = id => {\n  const params = { ...baseParams };\n  return axios\n    .get(`${URL_DETAILS}/${id}/credits`, { params })\n    .catch(handleRequestError);\n};\n\nexport const getMovieReviewById = id => {\n  const params = { ...baseParams };\n  return axios\n    .get(`${URL_DETAILS}/${id}/reviews`, { params })\n    .catch(handleRequestError);\n};\n\nexport const searchMovies = query => {\n  const params = {\n    ...baseParams,\n    query,\n    page: '1',\n  };\n  return axios.get(URL_SEARCH, { params }).catch(handleRequestError);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"movie-details_button__vry-T\",\"img\":\"movie-details_img__UYao0\",\"info\":\"movie-details_info__avR+w\",\"img_block\":\"movie-details_img_block__rqaZP\",\"text_block\":\"movie-details_text_block__n89WB\",\"title\":\"movie-details_title__0HjVA\",\"subtitle\":\"movie-details_subtitle__mitJY\"};","import { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { getMovieById } from 'api/movies';\n\nimport style from './movie-details.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const [year, setYear] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  const from = location.state?.from || '/';\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!id) return;\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getMovieById(id);\n        setMovie(data);\n        const dateObject = new Date(Date.parse(data.release_date));\n        setYear(dateObject.getFullYear());\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const goBack = () => navigate(from);\n\n  return (\n    <div>\n      {loading && <p>...Loading</p>}\n      {error && <p>Error: {error}</p>}\n      <button className={style.button} onClick={goBack} type=\"button\">\n        {'\\u2190'} Go back\n      </button>\n      {movie && (\n        <>\n          <div className={style.info}>\n            <div className={style.img_block}>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                alt={movie.title}\n                className={style.img}\n              />\n            </div>\n            <div className={style.text_block}>\n              <div>\n                <p className={style.title}>\n                  {movie.title} ({year})\n                </p>\n                <p>\n                  <span>User Score:</span>{' '}\n                  {(movie.vote_average * 10).toFixed(2)}%\n                </p>\n              </div>\n              <div>\n                <p className={style.subtitle}>Overview</p>\n                <p>{movie.overview}</p>\n              </div>\n              <div>\n                <p className={style.subtitle}>Genres</p>\n                <>\n                  {movie.poster_path && (\n                    <p>\n                      <span></span>{' '}\n                      {movie.genres.map((genre, index) => (\n                        <span key={genre.id}>\n                          {genre.name}\n                          {index !== movie.genres.length - 1 && ' '}\n                        </span>\n                      ))}\n                    </p>\n                  )}\n                </>\n              </div>\n            </div>\n          </div>\n          <p className={style.subtitle}>Additional information</p>\n          <ul>\n            <li>\n              <NavLink to=\"cast\" state={{ from }}>\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\" state={{ from }}>\n                Reviews\n              </NavLink>\n            </li>\n            <Suspense> {<Outlet />}</Suspense>\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\nexport default MovieDetails;\n","import MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst SingleMoviePage = () => {\n  return (\n    <div>\n      <MovieDetails />\n    </div>\n  );\n};\n\nexport default SingleMoviePage;\n"],"names":["URL_DETAILS","baseParams","api_key","language","include_adult","handleRequestError","error","console","getTrendingMovies","params","_objectSpread","page","per_page","axios","catch","getMovieById","id","concat","getMovieCastById","getMovieReviewById","searchMovies","query","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","year","setYear","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setError","useParams","from","useLocation","state","navigate","useNavigate","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieById","data","dateObject","_context","prev","next","sent","Date","parse","release_date","getFullYear","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","className","style","onClick","type","_Fragment","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","index","name","length","NavLink","to","Suspense","Outlet","MovieDetails"],"sourceRoot":""}